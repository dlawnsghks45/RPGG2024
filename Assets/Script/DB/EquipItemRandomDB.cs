// This code automatically generated by TableCodeGen
using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class EquipItemRandomDB : MonoBehaviour
{
    
    public TextAsset ItemDatabase;

   
    public void Awake()
    {
        ItemDatabase = Resources.Load("CSV/EquipItemRandom") as TextAsset;
        Load(ItemDatabase);
    }

    //싱글톤만들기. 변경
    private static EquipItemRandomDB _instance = null;
    public static EquipItemRandomDB Instance
    {
        get
        {
            if (_instance == null)
            {
                _instance = FindObjectOfType(typeof(EquipItemRandomDB)) as EquipItemRandomDB;

                if (_instance == null)
                {
                }
            }
            return _instance;
        }
    }


	public class Row
	{
        		public string Description;
		public string id;
		public string statcount;
		public string Str;
		public string Dex;
		public string Int;
		public string Wis;
		public string Atk;
		public string Def;
		public string Crit;
		public string CritDmg;
		public string attackspeed;
		public string castspeed;
		public string spcialskills;
		public string spcialskills2;
		public string DodgeP;
		public string FirAtkP;
		public string WatAtkP;
		public string EarAtkP;
		public string WinAtkP;
		public string LigAtkP;
		public string DarAtkP;
		public string DropP;
		public string GoldP;
		public string ExpP;
		public string Dot_Poison_Melee;
		public string Dot_Fire_Melee;
		public string Dot_Ice_Melee;
		public string Dot_Blind_Melee;
		public string Dot_Poison_Range;
		public string Dot_Fire_Range;
		public string Dot_Ice_Range;
		public string Dot_Blind_Range;
		public string CoolDownP;
		public string AtkPBoss;
		public string AtkPNormal;
		public string BasicAtkP;
		public string SkillP;

	}

	List<Row> rowList = new List<Row>();
	bool isLoaded = false;

	public bool IsLoaded()
	{
		return isLoaded;
	}

	public List<Row> GetRowList()
	{
		return rowList;
	}

	public void Load(TextAsset csv)
	{
		rowList.Clear();
		string[][] grid = CsvParser2.Parse(csv.text);
		for(int i = 1 ; i < grid.Length ; i++)
		{
			Row row = new Row();
			row.Description = grid[i][0];
			row.id = grid[i][1];
			row.statcount = grid[i][2];
			row.Str = grid[i][3];
			row.Dex = grid[i][4];
			row.Int = grid[i][5];
			row.Wis = grid[i][6];
			row.Atk = grid[i][7];
			row.Def = grid[i][8];
			row.Crit = grid[i][9];
			row.CritDmg = grid[i][10];
			row.attackspeed = grid[i][11];
			row.castspeed = grid[i][12];
			row.spcialskills = grid[i][13];
			row.spcialskills2 = grid[i][14];
			row.DodgeP = grid[i][15];
			row.FirAtkP = grid[i][16];
			row.WatAtkP = grid[i][17];
			row.EarAtkP = grid[i][18];
			row.WinAtkP = grid[i][19];
			row.LigAtkP = grid[i][20];
			row.DarAtkP = grid[i][21];
			row.DropP = grid[i][22];
			row.GoldP = grid[i][23];
			row.ExpP = grid[i][24];
			row.Dot_Poison_Melee = grid[i][25];
			row.Dot_Fire_Melee = grid[i][26];
			row.Dot_Ice_Melee = grid[i][27];
			row.Dot_Blind_Melee = grid[i][28];
			row.Dot_Poison_Range = grid[i][29];
			row.Dot_Fire_Range = grid[i][30];
			row.Dot_Ice_Range = grid[i][31];
			row.Dot_Blind_Range = grid[i][32];
			row.CoolDownP = grid[i][33];
			row.AtkPBoss = grid[i][34];
			row.AtkPNormal = grid[i][35];
			row.BasicAtkP = grid[i][36];
			row.SkillP = grid[i][37];

			rowList.Add(row);
		}
		isLoaded = true;
	}

	public int NumRows()
	{
		return rowList.Count;
	}

	public Row GetAt(int i)
	{
		if(rowList.Count <= i)
			return null;
		return rowList[i];
	}

	public Row Find_Description(string find)
	{
		return rowList.Find(x => x.Description == find);
	}
	public List<Row> FindAll_Description(string find)
	{
		return rowList.FindAll(x => x.Description == find);
	}
	public Row Find_id(string find)
	{
		return rowList.Find(x => x.id == find);
	}
	public List<Row> FindAll_id(string find)
	{
		return rowList.FindAll(x => x.id == find);
	}
	public Row Find_statcount(string find)
	{
		return rowList.Find(x => x.statcount == find);
	}
	public List<Row> FindAll_statcount(string find)
	{
		return rowList.FindAll(x => x.statcount == find);
	}
	public Row Find_Str(string find)
	{
		return rowList.Find(x => x.Str == find);
	}
	public List<Row> FindAll_Str(string find)
	{
		return rowList.FindAll(x => x.Str == find);
	}
	public Row Find_Dex(string find)
	{
		return rowList.Find(x => x.Dex == find);
	}
	public List<Row> FindAll_Dex(string find)
	{
		return rowList.FindAll(x => x.Dex == find);
	}
	public Row Find_Int(string find)
	{
		return rowList.Find(x => x.Int == find);
	}
	public List<Row> FindAll_Int(string find)
	{
		return rowList.FindAll(x => x.Int == find);
	}
	public Row Find_Wis(string find)
	{
		return rowList.Find(x => x.Wis == find);
	}
	public List<Row> FindAll_Wis(string find)
	{
		return rowList.FindAll(x => x.Wis == find);
	}
	public Row Find_Atk(string find)
	{
		return rowList.Find(x => x.Atk == find);
	}
	public List<Row> FindAll_Atk(string find)
	{
		return rowList.FindAll(x => x.Atk == find);
	}
	public Row Find_Def(string find)
	{
		return rowList.Find(x => x.Def == find);
	}
	public List<Row> FindAll_Def(string find)
	{
		return rowList.FindAll(x => x.Def == find);
	}
	public Row Find_Crit(string find)
	{
		return rowList.Find(x => x.Crit == find);
	}
	public List<Row> FindAll_Crit(string find)
	{
		return rowList.FindAll(x => x.Crit == find);
	}
	public Row Find_CritDmg(string find)
	{
		return rowList.Find(x => x.CritDmg == find);
	}
	public List<Row> FindAll_CritDmg(string find)
	{
		return rowList.FindAll(x => x.CritDmg == find);
	}
	public Row Find_attackspeed(string find)
	{
		return rowList.Find(x => x.attackspeed == find);
	}
	public List<Row> FindAll_attackspeed(string find)
	{
		return rowList.FindAll(x => x.attackspeed == find);
	}
	public Row Find_castspeed(string find)
	{
		return rowList.Find(x => x.castspeed == find);
	}
	public List<Row> FindAll_castspeed(string find)
	{
		return rowList.FindAll(x => x.castspeed == find);
	}
	public Row Find_spcialskills(string find)
	{
		return rowList.Find(x => x.spcialskills == find);
	}
	public List<Row> FindAll_spcialskills(string find)
	{
		return rowList.FindAll(x => x.spcialskills == find);
	}
	public Row Find_spcialskills2(string find)
	{
		return rowList.Find(x => x.spcialskills2 == find);
	}
	public List<Row> FindAll_spcialskills2(string find)
	{
		return rowList.FindAll(x => x.spcialskills2 == find);
	}
	public Row Find_DodgeP(string find)
	{
		return rowList.Find(x => x.DodgeP == find);
	}
	public List<Row> FindAll_DodgeP(string find)
	{
		return rowList.FindAll(x => x.DodgeP == find);
	}
	public Row Find_FirAtkP(string find)
	{
		return rowList.Find(x => x.FirAtkP == find);
	}
	public List<Row> FindAll_FirAtkP(string find)
	{
		return rowList.FindAll(x => x.FirAtkP == find);
	}
	public Row Find_WatAtkP(string find)
	{
		return rowList.Find(x => x.WatAtkP == find);
	}
	public List<Row> FindAll_WatAtkP(string find)
	{
		return rowList.FindAll(x => x.WatAtkP == find);
	}
	public Row Find_EarAtkP(string find)
	{
		return rowList.Find(x => x.EarAtkP == find);
	}
	public List<Row> FindAll_EarAtkP(string find)
	{
		return rowList.FindAll(x => x.EarAtkP == find);
	}
	public Row Find_WinAtkP(string find)
	{
		return rowList.Find(x => x.WinAtkP == find);
	}
	public List<Row> FindAll_WinAtkP(string find)
	{
		return rowList.FindAll(x => x.WinAtkP == find);
	}
	public Row Find_LigAtkP(string find)
	{
		return rowList.Find(x => x.LigAtkP == find);
	}
	public List<Row> FindAll_LigAtkP(string find)
	{
		return rowList.FindAll(x => x.LigAtkP == find);
	}
	public Row Find_DarAtkP(string find)
	{
		return rowList.Find(x => x.DarAtkP == find);
	}
	public List<Row> FindAll_DarAtkP(string find)
	{
		return rowList.FindAll(x => x.DarAtkP == find);
	}
	public Row Find_DropP(string find)
	{
		return rowList.Find(x => x.DropP == find);
	}
	public List<Row> FindAll_DropP(string find)
	{
		return rowList.FindAll(x => x.DropP == find);
	}
	public Row Find_GoldP(string find)
	{
		return rowList.Find(x => x.GoldP == find);
	}
	public List<Row> FindAll_GoldP(string find)
	{
		return rowList.FindAll(x => x.GoldP == find);
	}
	public Row Find_ExpP(string find)
	{
		return rowList.Find(x => x.ExpP == find);
	}
	public List<Row> FindAll_ExpP(string find)
	{
		return rowList.FindAll(x => x.ExpP == find);
	}
	public Row Find_Dot_Poison_Melee(string find)
	{
		return rowList.Find(x => x.Dot_Poison_Melee == find);
	}
	public List<Row> FindAll_Dot_Poison_Melee(string find)
	{
		return rowList.FindAll(x => x.Dot_Poison_Melee == find);
	}
	public Row Find_Dot_Fire_Melee(string find)
	{
		return rowList.Find(x => x.Dot_Fire_Melee == find);
	}
	public List<Row> FindAll_Dot_Fire_Melee(string find)
	{
		return rowList.FindAll(x => x.Dot_Fire_Melee == find);
	}
	public Row Find_Dot_Ice_Melee(string find)
	{
		return rowList.Find(x => x.Dot_Ice_Melee == find);
	}
	public List<Row> FindAll_Dot_Ice_Melee(string find)
	{
		return rowList.FindAll(x => x.Dot_Ice_Melee == find);
	}
	public Row Find_Dot_Blind_Melee(string find)
	{
		return rowList.Find(x => x.Dot_Blind_Melee == find);
	}
	public List<Row> FindAll_Dot_Blind_Melee(string find)
	{
		return rowList.FindAll(x => x.Dot_Blind_Melee == find);
	}
	public Row Find_Dot_Poison_Range(string find)
	{
		return rowList.Find(x => x.Dot_Poison_Range == find);
	}
	public List<Row> FindAll_Dot_Poison_Range(string find)
	{
		return rowList.FindAll(x => x.Dot_Poison_Range == find);
	}
	public Row Find_Dot_Fire_Range(string find)
	{
		return rowList.Find(x => x.Dot_Fire_Range == find);
	}
	public List<Row> FindAll_Dot_Fire_Range(string find)
	{
		return rowList.FindAll(x => x.Dot_Fire_Range == find);
	}
	public Row Find_Dot_Ice_Range(string find)
	{
		return rowList.Find(x => x.Dot_Ice_Range == find);
	}
	public List<Row> FindAll_Dot_Ice_Range(string find)
	{
		return rowList.FindAll(x => x.Dot_Ice_Range == find);
	}
	public Row Find_Dot_Blind_Range(string find)
	{
		return rowList.Find(x => x.Dot_Blind_Range == find);
	}
	public List<Row> FindAll_Dot_Blind_Range(string find)
	{
		return rowList.FindAll(x => x.Dot_Blind_Range == find);
	}
	public Row Find_CoolDownP(string find)
	{
		return rowList.Find(x => x.CoolDownP == find);
	}
	public List<Row> FindAll_CoolDownP(string find)
	{
		return rowList.FindAll(x => x.CoolDownP == find);
	}
	public Row Find_AtkPBoss(string find)
	{
		return rowList.Find(x => x.AtkPBoss == find);
	}
	public List<Row> FindAll_AtkPBoss(string find)
	{
		return rowList.FindAll(x => x.AtkPBoss == find);
	}
	public Row Find_AtkPNormal(string find)
	{
		return rowList.Find(x => x.AtkPNormal == find);
	}
	public List<Row> FindAll_AtkPNormal(string find)
	{
		return rowList.FindAll(x => x.AtkPNormal == find);
	}
	public Row Find_BasicAtkP(string find)
	{
		return rowList.Find(x => x.BasicAtkP == find);
	}
	public List<Row> FindAll_BasicAtkP(string find)
	{
		return rowList.FindAll(x => x.BasicAtkP == find);
	}
	public Row Find_SkillP(string find)
	{
		return rowList.Find(x => x.SkillP == find);
	}
	public List<Row> FindAll_SkillP(string find)
	{
		return rowList.FindAll(x => x.SkillP == find);
	}

}